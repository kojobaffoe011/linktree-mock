{"ast":null,"code":"var _jsxFileName = \"/Users/cybercyber/Documents/projects/hng internship/linktree-mock/src/components/layout/Grid.js\";\nimport styled from \"styled-components\";\nimport { breakpoints } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGrid = styled.div`\n  display: grid;\n  height: ${_ref => {\n  let {\n    isStreched\n  } = _ref;\n  return isStreched ? \"100%\" : \"auto\";\n}};\n  grid-template-columns: repeat(${_ref2 => {\n  let {\n    span\n  } = _ref2;\n  return span;\n}}, 1fr);\n  grid-gap: ${_ref3 => {\n  let {\n    gap\n  } = _ref3;\n  return gap;\n}};\n  transition: all 500ms;\n\n  ${breakpoints.xxl} {\n    grid-template-columns: ${_ref4 => {\n  let {\n    xxl\n  } = _ref4;\n  return xxl && `repeat(${xxl},1fr)`;\n}};\n  }\n\n  ${breakpoints.xl} {\n    grid-template-columns: ${_ref5 => {\n  let {\n    xl\n  } = _ref5;\n  return xl && `repeat(${xl},1fr)`;\n}};\n  }\n\n  ${breakpoints.lg} {\n    grid-template-columns: ${_ref6 => {\n  let {\n    lg\n  } = _ref6;\n  return lg && `repeat(${lg},1fr)`;\n}};\n  }\n\n  ${breakpoints.md} {\n    grid-template-columns: ${_ref7 => {\n  let {\n    md\n  } = _ref7;\n  return md && `repeat(${md},1fr)`;\n}};\n  }\n\n  ${breakpoints.sm} {\n    grid-template-columns: ${_ref8 => {\n  let {\n    sm\n  } = _ref8;\n  return sm && `repeat(${sm},1fr)`;\n}};\n  }\n`;\n_c = StyledGrid;\nconst Grid = _ref9 => {\n  let {\n    gap = \"20px\",\n    lg = 12,\n    md,\n    sm,\n    xl,\n    xxl,\n    className = \"\",\n    isStreched = false,\n    span = 12,\n    style,\n    children\n  } = _ref9;\n  return /*#__PURE__*/_jsxDEV(StyledGrid, {\n    className: `grid ${className}`,\n    isStreched: isStreched,\n    span: span,\n    gap: gap,\n    sm: sm,\n    md: md,\n    lg: lg,\n    xl: xl,\n    xxl: xxl,\n    style: {\n      ...style\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Grid;\nfunction getDisplay(size) {\n  if (size == null || undefined) return;\n  return {\n    display: size === 0 ? \"none\" : \"block\",\n    \"grid-column\": (size !== null || undefined) && `span ${size}`\n  };\n}\nconst StyledGridItem = styled.div`\n  ${_ref10 => {\n  let {\n    span\n  } = _ref10;\n  return getDisplay(span);\n}};\n  transition: all 500ms;\n\n  ${breakpoints.xxl} {\n    ${_ref11 => {\n  let {\n    xxl\n  } = _ref11;\n  return getDisplay(xxl);\n}};\n  }\n\n  ${breakpoints.xl} {\n    ${_ref12 => {\n  let {\n    xl\n  } = _ref12;\n  return getDisplay(xl);\n}};\n  }\n\n  ${breakpoints.lg} {\n    ${_ref13 => {\n  let {\n    lg\n  } = _ref13;\n  return getDisplay(lg);\n}};\n  }\n\n  ${breakpoints.md} {\n    ${_ref14 => {\n  let {\n    md\n  } = _ref14;\n  return getDisplay(md);\n}};\n  }\n\n  ${breakpoints.sm} {\n    ${_ref15 => {\n  let {\n    sm\n  } = _ref15;\n  return getDisplay(sm);\n}};\n  }\n`;\n_c3 = StyledGridItem;\nexport const GridItem = _ref16 => {\n  let {\n    children,\n    span,\n    xxl,\n    sm,\n    md,\n    lg,\n    xl,\n    className = \"\",\n    ...props\n  } = _ref16;\n  return /*#__PURE__*/_jsxDEV(StyledGridItem, {\n    className: `${className} grid-item`,\n    span: span,\n    xxl: xxl,\n    xl: xl,\n    sm: sm,\n    md: md,\n    lg: lg,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_c4 = GridItem;\nexport default Grid;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledGrid\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"StyledGridItem\");\n$RefreshReg$(_c4, \"GridItem\");","map":{"version":3,"names":["styled","breakpoints","StyledGrid","div","isStreched","span","gap","xxl","xl","lg","md","sm","Grid","className","style","children","getDisplay","size","undefined","display","StyledGridItem","GridItem","props"],"sources":["/Users/cybercyber/Documents/projects/hng internship/linktree-mock/src/components/layout/Grid.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { breakpoints } from \"../../constants\";\n\nconst StyledGrid = styled.div`\n  display: grid;\n  height: ${({ isStreched }) => (isStreched ? \"100%\" : \"auto\")};\n  grid-template-columns: repeat(${({ span }) => span}, 1fr);\n  grid-gap: ${({ gap }) => gap};\n  transition: all 500ms;\n\n  ${breakpoints.xxl} {\n    grid-template-columns: ${({ xxl }) => xxl && `repeat(${xxl},1fr)`};\n  }\n\n  ${breakpoints.xl} {\n    grid-template-columns: ${({ xl }) => xl && `repeat(${xl},1fr)`};\n  }\n\n  ${breakpoints.lg} {\n    grid-template-columns: ${({ lg }) => lg && `repeat(${lg},1fr)`};\n  }\n\n  ${breakpoints.md} {\n    grid-template-columns: ${({ md }) => md && `repeat(${md},1fr)`};\n  }\n\n  ${breakpoints.sm} {\n    grid-template-columns: ${({ sm }) => sm && `repeat(${sm},1fr)`};\n  }\n`;\n\nconst Grid = ({\n  gap = \"20px\",\n  lg = 12,\n  md,\n  sm,\n  xl,\n  xxl,\n  className = \"\",\n  isStreched = false,\n  span = 12,\n  style,\n  children,\n}) => {\n  return (\n    <StyledGrid\n      className={`grid ${className}`}\n      isStreched={isStreched}\n      span={span}\n      gap={gap}\n      sm={sm}\n      md={md}\n      lg={lg}\n      xl={xl}\n      xxl={xxl}\n      style={{ ...style }}\n    >\n      {children}\n    </StyledGrid>\n  );\n};\n\nfunction getDisplay(size) {\n  if (size == null || undefined) return;\n  return {\n    display: size === 0 ? \"none\" : \"block\",\n    \"grid-column\": (size !== null || undefined) && `span ${size}`,\n  };\n}\n\nconst StyledGridItem = styled.div`\n  ${({ span }) => getDisplay(span)};\n  transition: all 500ms;\n\n  ${breakpoints.xxl} {\n    ${({ xxl }) => getDisplay(xxl)};\n  }\n\n  ${breakpoints.xl} {\n    ${({ xl }) => getDisplay(xl)};\n  }\n\n  ${breakpoints.lg} {\n    ${({ lg }) => getDisplay(lg)};\n  }\n\n  ${breakpoints.md} {\n    ${({ md }) => getDisplay(md)};\n  }\n\n  ${breakpoints.sm} {\n    ${({ sm }) => getDisplay(sm)};\n  }\n`;\n\nexport const GridItem = ({\n  children,\n  span,\n  xxl,\n  sm,\n  md,\n  lg,\n  xl,\n  className = \"\",\n  ...props\n}) => {\n  return (\n    <StyledGridItem\n      className={`${className} grid-item`}\n      span={span}\n      xxl={xxl}\n      xl={xl}\n      sm={sm}\n      md={md}\n      lg={lg}\n      {...props}\n    >\n      {children}\n    </StyledGridItem>\n  );\n};\n\nexport default Grid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}